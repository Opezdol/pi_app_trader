# we install poetry into than image
FROM python:3.12-slim AS requirements-from-poetry
WORKDIR /tmp
# set env variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Expected python version
ARG EXPECTED_PYTHON_VERSION="3.12"
# install system dependencies
RUN apt-get update \
  && apt-get -y install \
    --no-install-recommends \
    netcat-traditional gcc g++ libpq-dev \
  && apt-get clean
# Let's do some safety checks
RUN python3 --version | grep -q "Python $EXPECTED_PYTHON_VERSION" \
    || (echo "###### FAILED CHECK FOR PYTHON ${EXPECTED_PYTHON_VERSION} (got $(python3 --version)) ######"; false)

# install python dependencies
RUN pip install --upgrade pip
RUN pip install poetry
COPY ./pyproject.toml ./poetry.lock* /tmp/
RUN poetry self add poetry-plugin-export
RUN poetry export -f requirements.txt --output requirements.txt

## And now we build 
FROM python:3.12-slim
LABEL maintainer="phhmn"
LABEL description="pi_app && DB &&  Websocket OKX market API "

# make WORKDIR
WORKDIR /usr/src/pi_app
# set env variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
# install system dependencies
RUN apt-get update \
  && apt-get -y install \
    --no-install-recommends \
    netcat-traditional gcc g++ libpq-dev \
  && apt-get clean

# install python dependencies
RUN pip install --upgrade pip
COPY --from=requirements-from-poetry /tmp/requirements.txt .
RUN pip install -r requirements.txt

# add app
COPY . .

CMD ["python", "runOkx.py"]
